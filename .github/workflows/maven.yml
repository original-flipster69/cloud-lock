# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: "Building and Testing"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
  opensource-security:
    name: Checking Dependency Security with Snyk
    runs-on: ubuntu-latest
    
    steps:   
      - uses: actions/checkout@v3
      - name: Set up Node 14
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: install Snyk CLI
        run: npm install -g snyk
      - name: Set up Snyk Monitoring
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk monitor
      - name: Run Snyk to check for vulnerable dependencies
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --fail-on=patchable
          
  code-security:
    name: Checking Code Security with Snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node 14
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk to check for vulnerable dependencies
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test

